{
  "openapi": "3.0.0",
  "info": {
    "title": "api-two-v1",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Business owner: IS & T\n",
    "url": "http://"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "users"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get list of users.",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "member_of",
            "in": "query",
            "description": "Get users by groupmembership",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/users/{email}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get user by email",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "required": [
          "created",
          "email",
          "enabled",
          "firstname",
          "lastname",
          "payers",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "lastname": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "firstname": {
            "type": "string"
          },
          "payers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payer"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permissions"
            }
          },
          "has_otp": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "has_permanent_password": {
            "type": "boolean"
          },
          "last_login": {
            "type": "string",
            "format": "date-time"
          },
          "clientadmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "Error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error_error"
          }
        },
        "additionalProperties": true,
        "x-amf-examples": {
          "example_11": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Unauthorized"
            }
          },
          "example_15": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Not Acceptable"
            }
          },
          "example_18": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Internal Server Error"
            }
          },
          "example_14": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Not Allowed"
            }
          },
          "example_16": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Unsupported Media Type"
            }
          },
          "example_19": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Not Implemented"
            }
          },
          "example_13": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Not Found"
            }
          },
          "example_12": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Forbidden"
            }
          },
          "example_17": {
            "error": {
              "time": "2001-01-01T00:00:00+00:00",
              "message": "Too Many Requests"
            }
          }
        }
      },
      "Payer": {
        "title": "Payer",
        "required": [
          "address",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "id": {
            "type": "number"
          },
          "number": {
            "type": "number"
          },
          "orderers": {
            "type": "array",
            "description": "Orderer",
            "items": {
              "$ref": "#/components/schemas/Orderer"
            }
          }
        },
        "additionalProperties": true,
        "description": "Base type for customer related objects"
      },
      "Permissions": {
        "title": "Permissions",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Payer id"
          },
          "o": {
            "type": "array",
            "description": "Orderer",
            "items": {
              "$ref": "#/components/schemas/Permissions_o"
            }
          }
        },
        "additionalProperties": true
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "address1": {
            "type": "string",
            "description": "First address line"
          },
          "address2": {
            "type": "string",
            "description": "Second address line"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "address5": {
            "type": "string"
          },
          "address6": {
            "type": "string"
          },
          "address7": {
            "type": "string"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "country_code": {
            "type": "string",
            "description": "Country code"
          },
          "valid_from": {
            "type": "string",
            "description": "Valid to date",
            "format": "date"
          },
          "valid_to": {
            "type": "string",
            "description": "Valid to date",
            "format": "date"
          }
        },
        "additionalProperties": true
      },
      "Orderer": {
        "title": "Orderer",
        "required": [
          "address",
          "id",
          "name",
          "workplaces"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "workplaces": {
            "type": "array",
            "description": "Workplaces",
            "items": {
              "$ref": "#/components/schemas/Workplace"
            }
          },
          "id": {
            "type": "number"
          },
          "number": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "description": "Base type for customer related objects"
      },
      "Workplace": {
        "title": "Workplace",
        "required": [
          "address",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "id": {
            "type": "number"
          },
          "number": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "description": "Base type for customer related objects"
      },
      "Error_error": {
        "required": [
          "time"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Date and time when the error occurred",
            "format": "date-time",
            "example": "2001-01-01T00:00:00Z"
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "description": {
            "x-amf-union": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "code": {
            "type": "number",
            "description": "HTTP status code. Only for clients who require it in the response payload.",
            "example": 400
          }
        },
        "additionalProperties": true
      },
      "Permissions_o": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "wp": {
            "type": "array",
            "description": "Workplaces",
            "items": {
              "type": "number"
            }
          }
        },
        "additionalProperties": true
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authentication",
        "scheme": "basic"
      }
    }
  }
}